def trapezoidal_rule(f, a, b, n):
    """
    Вычисление интеграла функции f на [a, b] методом трапеций.

    Аргументы:
    f -- функция одной переменной
    a -- нижний предел интегрирования
    b -- верхний предел интегрирования
    n -- число разбиений (чем больше, тем точнее)

    Возвращает:
    Приближённое значение интеграла
    """
    h = (b - a) / n  # шаг разбиения
    integral = 0.5 * (f(a) + f(b))  # первые и последние слагаемые с половинным весом

    for i in range(1, n):
        x = a + i * h
        integral += f(x)

    integral *= h
    return integral


# Пример использования
if __name__ == "__main__":
    import math

    # Интегрируем sin(x) на [0, pi], известный ответ = 2
    result = trapezoidal_rule(math.sin, 0, math.pi, 1000)
    print(f"Приближённое значение интеграла sin(x) на [0, pi]: {result}")
